# generated by datamodel-codegen:
#   filename:  account_connections.json
#   timestamp: 2021-07-18T15:28:19+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, conint, constr


class Server(BaseModel):
    name: constr(min_length=1) = Field(
        ...,
        description="The configured name for the server, matches ID when unconfigured",
    )
    host: str = Field(
        ..., description="The host this server runs on, typically a IP address"
    )
    id: str = Field(..., description="The unique server ID for this node")
    cluster: Optional[str] = Field(
        None, description="The cluster the server belongs to"
    )
    ver: str = Field(..., description="The version NATS running on the server")
    seq: int = Field(..., description="Internal server sequence ID")
    jetstream: bool = Field(
        ..., description="Indicates if this server has JetStream enabled"
    )
    time: str = Field(..., description="The local time of the server")


class IoNatsServerAdvisoryV1AccountConnections(BaseModel):
    type: str
    id: str = Field(..., description="Unique correlation ID for this event")
    timestamp: str = Field(
        ..., description="The time this event was created in RFC3339 format"
    )
    server: Server = Field(
        ..., description="Details about the server the client connected to"
    )
    acc: str = Field(..., description="The account the update is for")
    conns: conint(ge=0) = Field(
        ..., description="The number of active client connections to the server"
    )
    leafnodes: conint(ge=0) = Field(
        ..., description="The number of active leafnode connections to the server"
    )
    total_conns: conint(ge=0) = Field(
        ..., description="The combined client and leafnode account connections"
    )
