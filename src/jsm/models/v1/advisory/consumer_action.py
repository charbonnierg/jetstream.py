# generated by datamodel-codegen:
#   filename:  consumer_action.json
#   timestamp: 2021-07-18T15:28:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class Action(Enum):
    create = "create"
    delete = "delete"


class IoNatsJetstreamAdvisoryV1ConsumerAction(BaseModel):
    type: str
    id: str = Field(..., description="Unique correlation ID for this event")
    timestamp: str = Field(
        ..., description="The time this event was created in RFC3339 format"
    )
    action: Action = Field(..., description="The action that the event describes")
    stream: str = Field(
        ..., description="The name of the Stream that the Consumer belongs to"
    )
    consumer: Optional[str] = Field(
        None, description="The name of the Consumer that's acted on"
    )
