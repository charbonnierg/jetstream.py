# generated by datamodel-codegen:
#   filename:  stream_purge_response.json
#   timestamp: 2021-07-18T15:27:45+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import BaseModel, Field, conint


class IoNatsJetstreamApiV1StreamPurgeResponse1(BaseModel):
    type: str


class Error(BaseModel):
    code: conint(ge=300, le=699) = Field(
        ..., description="HTTP like error code in the 300 to 500 range"
    )
    description: Optional[str] = Field(
        None, description="A human friendly description of the error"
    )


class IoNatsJetstreamApiV1StreamPurgeResponseItem(BaseModel):
    error: Error


class IoNatsJetstreamApiV1StreamPurgeResponseItem1(BaseModel):
    success: bool
    purged: conint(ge=0) = Field(
        ..., description="Number of messages purged from the Stream"
    )


class IoNatsJetstreamApiV1StreamPurgeResponse(BaseModel):
    __root__: Union[
        IoNatsJetstreamApiV1StreamPurgeResponse1,
        IoNatsJetstreamApiV1StreamPurgeResponseItem,
        IoNatsJetstreamApiV1StreamPurgeResponseItem1,
    ] = Field(
        ...,
        description="A response from the JetStream $JS.API.STREAM.PURGE API",
        title="io.nats.jetstream.api.v1.stream_purge_response",
    )
