# generated by datamodel-codegen:
#   filename:  pub_ack_response.json
#   timestamp: 2021-07-18T15:27:46+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, conint, constr


class Error(BaseModel):
    code: conint(ge=300, le=699) = Field(
        ..., description="HTTP like error code in the 300 to 500 range"
    )
    description: Optional[str] = Field(
        None, description="A human friendly description of the error"
    )


class IoNatsJetstreamApiV1PubAckResponse(BaseModel):
    error: Optional[Error] = None
    stream: constr(min_length=1) = Field(
        ..., description="The name of the stream that received the message"
    )
    seq: Optional[conint(ge=0, le=18446744073709551616)] = Field(
        None,
        description="If successful this will be the sequence the message is stored at",
    )
    duplicate: Optional[bool] = Field(
        False,
        description="Indicates that the message was not stored due to the Nats-Msg-Id header and duplicate tracking",
    )
